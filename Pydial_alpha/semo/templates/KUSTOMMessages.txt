# NLG message generation rules
# Last modified by JS on June 06, 2006

# This file consists of two parts:

# The first section is a list of rules defining system prompts for dialogue acts.
# You can use $A, $B, $C as variables for slot names and $U, $V, $W, $X, $Y, $Z as variables for value names.
# You can use vertical bars "|" to define several messages for the same dialogue act.

# The second section contains a list of hotels and locations. You can copy and paste this part from JVrules.txt.
# Just add an asterisk "*" to all hotel and location names that require the article "the" in sentences
# like "I can recommend X"

%count_rest($count) {
  0 : "n'y a plus de produit";
  1 : "y a un produit";
  $count : "y a $count produits";
}

%q($X){
  meat : "Quel type de viande voulez-vous?";
  kind : "Que voulez-vous?";
  energy : "A quel voulez-vous que ce soit calorique?";
  sweetness : "A quel voulez-vous que ce soit sucré?";
  saltiness : "A quel voulez-vous que ce soit salé?";
  sweetness : "A quel voulez-vous que ce soit sucré?";
  happymealavailable : "Voulez-vous que ce soit disponible en Happy Meal?";
}
%kind_raw($kind) {
  sandwich: "sandwich";
  accompaniment: "accompagnement";
  drink: "boisson";
  dessert: "dessert";
}
%kind_indef($kind) {
  sandwich: "un sandwich";
  accompaniment: "un accompagnement";
  drink: "une boisson";
  dessert: "un dessert";
}
%kind_adj($kind) {
  sandwich: "un sandwich";
  accompaniment: "un accompagnement";
  drink: "une boisson";
  dessert: "un dessert";
}
%kind_def($kind) {
  sandwich: "le sandwich";
  accompaniment: "le accompagnement";
  drink: "la boisson";
  dessert: "le dessert";
}

%energy_inf($energy) {
  free: "est non calorique";
  little: "est peu calorique";
  fair: "est relativement calorique";
  much: "est très calorique";
  enormous: "est monstrueusement calorique";
}
%energy_adj($energy) {
  free: "sans calories";
  little: "peu calorique";
  fair: "relativement calorique";
  much: "très calorique";
  enormous: "monstrueusement calorique";
}
%fatness_inf($fatness) {
  free: "ne contient pas de gras";
  little: "est peu gras";
  fair: "est relativement gras";
  much: "est très gras";
  enormous: "est monstrueusement gras";
  full: "est full gras";
}
%fatness_adj($fatness) {
  free: "sans gras";
  little: "peu gras";
  fair: "relativement gras";
  much: "très gras";
  enormous: "monstrueusement gras";
  full: "full gras";
}
%sweetness_inf($sweetness) {
  free: "ne contient pas de sucre";
  little: "est peu sucré";
  fair: "est relativement sucré";
  much: "est très sucré";
  enormous: "est monstrueusement sucré";
  full: "est full sucre";
}
%sweetness_adj($sweetness) {
  free: "sans sucre";
  little: "peu sucré";
  fair: "relativement sucré";
  much: "très sucré";
  enormous: "monstrueusement sucré";
  full: "full sucre";
}
%saltiness_inf($saltiness) {
  free: "ne contient pas de sel";
  little: "est peu salé";
  fair: "est relativement salé";
  much: "est très salé";
  enormous: "est monstrueusement salé";
}
%saltiness_adj($saltiness) {
  free: "sans sel";
  little: "peu salé";
  fair: "relativement salé";
  much: "très salé";
  enormous: "monstrueusement salé";
}
%ishappymealonly_inf($ishappymealonly) {
  0: "est disponible hors Happy Meal";
  1: "n'est disponible qu'en Happy Meal";
}
%ishappymealonly_adj($ishappymealonly) {
  0: "disponible hors Happy Meal";
  1: "disponible uniquement en Happy Meal";
}
%ishappymealavailable_inf($ishappymealavailable) {
  0: "n'est pas disponible en Happy Meal";
  1: "est disponible en Happy Meal";
}
%ishappymealavailable_adj($ishappymealavailable) {
  0: "non disponible en Happy Meal";
  1: "disponible en Happy Meal";
}
%hascheese_inf($hascheese) {
  0: "ne contient pas de fromage";
  1: "contient du fromage";
}
%hascheese_adj($hascheese) {
  0: "sans fromage";
  1: "avec du fromage";
}
%hasbacon_inf($hasbacon) {
  0: "ne contient pas de bacon";
  1: "avec du bacon";
}
%hasbacon_adj($hasbacon) {
  0: "sans bacon";
  1: "avec du bacon";
}
%meat_inf($meat) {
  "n/a": "ne contient pas de viande";
  beef: "contient du boeuf";
  ham: "contient du jambon";
  chicken: "contient du poulet";
  fish: "contient du poisson";
  $meat: "contient du/de la $meat";
}
%meat_adj($meat) {
  "n/a": "sans viande";
  "beef": "avec du boeuf";
  "ham": "avec du jambon";
  "chicken": "avec du poulet";
  "fish": "avec du poisson";
  $meat: "avec du/de la $meat";
}

%pieces_inf($pieces) {
  0: "ne contient aucune pièce de viande";
  1: "contient une pièce de viande";
  $pieces : "contient $pieces pièces de viande";
}
%pieces_adj($pieces) {
  0: "sans pièce de viande";
  1: "avec une pièce de viande";
  $pieces : "avec $pieces pièces de viande";
}

%name_str($name) {
  $name : "autre que le $name";
}

%name_adj($name) {
  $name : "le $name";
}
%msg_str($type) {
  sorry: "Désolé";
  theresnone: "il n'y a aucun produit";
  cantfind: "je n'arrive pas à trouver";
  cantfindother: "je ne trouve rien d'autre";
  itdoesntmatter: "peu importe";
}

#%hello_str($part) { // When parser is fixed (support for speical chars and alternatives)
#  intro : "! Je suis votre |! Bienvenue a_ cet |! Bienvenue a_ l'|! Bienvenue dans l'| et bienvenue a_ cet | et bienvenue a_ l'| et bienvenue! Je suis votre | et bienvenue! Je suis l'";
#  mcdo : "McDonald's|McDo|pour devenir gros";
#  howmayhelp : "Comment puis-je vous aider?|Que puis-je faire pour vous?|Que puis-je faire pour vous aider?|En quoi puis-je vous être utile?";
#}
%null_str($part) {
  sorry: "Navré";
  didnotunderstand: "je suis un peu confus";
  canrepeat: "Pouvez-vous répéter, s'il vous plaît";
}
#%null_str($part) {
#  sorry: "Navre_|Je suis navre_|De_sole_|Je suis de_sole_|Toutes mes excuses|Veuillez m'excuser|Je vous prie de m'excuser";
#  didnotunderstand: "je suis un peu confus|je n'ai pas compris ce que vous avez dit|j'ai du mal a_ vous comprendre";
#  canrepeat: "Pouvez-vous re_pe_ter, s'il vous plaît";
#}

# percent<first>_<second>_<"str"|"inf">(<first_value>, <second_value>) {}
# prcent<first>_<second>_<third>_<"str"|"inf">(<first_value>, <second_value>) {}
# --------------- RULES --------------------------

#hello() : "Bonjour %hello_str(intro) assistant de commande %hello_str(mcdo)! %hello_str(howmayhelp)";
hello() : "Bonjour et bienvenue! Je suis votre assistant de recherche McDonald's! Que recherchez-vous?";

hello(more) : "Puis-je faire autre chose pour vous?";

null() : "Navré, je n'ai pas compris ce que vous avez dit. Pouvez-vous répéter, s'il vous plaît?";
#null() : "%null_str(sorry), %null_str(didnotunderstand). %null_str(canrepeat)?";
repeat() : "%null_str(canrepeat)?";
bye() : "Merci, au revoir!";

# Requests

request(task) : "Que voulez-vous?";
request(kind) : "Que voulez-vous?";
request(energy) : "A quel point voulez-vous que ce soit calorique?";
request(fatness) : "A quel point voulez-vous que ce soit gras?";
request(sweetness) : "A quel point voulez-vous que ce soit sucré?";
request(saltiness) : "A quel point voulez-vous que ce soit salé?";
request(ishappymealavailable) : "Voulez-vous que ce soit disponible en Happy Meal ou non?";
request(meat) : "Quelle type de viande souhaitez-vous?";

request(kind, option=$X) : "Que voulez-vous? %kind_indef($X)?";
request(energy, option=$X) : "A quel point voulez-vous que soit calorique? %energy_adj($X)?";
request(fatness, option=$X) : "A quel point voulez-vous que soit gras? %fatness_adj($X)?";
request(sweetness, option=$X) : "A quel point voulez-vous que soit sucré? %sweetness_adj($X)?";
request(saltiness, option=$X) : "A quel point voulez-vous que soit salé? %saltiness_adj($X)?";
request(meat, option=$X) : "Quelle type de viande souhaitez-vous? %meat_adj($X)?";

request(name, option=$X, option=$Y) : "Savez-vous comment s'appelle ce que vous cherchez? $X? $Y?";
request(energy, option=$X, option=$Y) : "Quel type de viande souhaitez-vous? %energy_adj($X)? %energy_adj($Y)?";
request(fatness, option=$X, option=$Y) : "Quel type de viande souhaitez-vous? %fatness_adj($X)? %fatness_adj($Y)?";
request(sweetness, option=$X, option=$Y) : "Quel type de viande souhaitez-vous? %sweetness_adj($X)? %sweetness_adj($Y)?";
request(saltiness, option=$X, option=$Y) : "Quel type de viande souhaitez-vous? %saltiness_adj($X)? %saltiness_adj($Y)?";
request(meat, option=$X, option=$Y) : "Quel type de viande souhaitez-vous? %meat_adj($X)? %meat_adj($Y)?";

reqmore() : "Puis-je vous aider en quoi que ce soit d'autre?";
reqmore(kind=dontcare) : "Voulez-vous chercher parmi tous les types de produits?";z
reqmore(energy=dontcare) : "Voulez-vous ignorer les calories?";
reqmore(fatness=dontcare) : "Voulez-vous ignorer le taux de gras?";
reqmore(sweetness=dontcare) : "Voulez-vous ignorer le taux de sucre?";
reqmore(saltiness=dontcare) : "Voulez-vous ignorer le taux de sel?";
reqmore(hascheese=dontcare) : "Voulez-vous ignorer la présence de fromage?";
reqmore(hasbacon=dontcare) : "Voulez-vous ignorer la présence de bacon?";

# Explicit Confirmations

confirm() : "Décrivez un peu plus votre recherche, s'il vous plaît.";
confirm(kind=dontcare) : "Vous voulez un produit quelconque, c'est bien cela?";
confirm(kind=$U) : "Vous voulez %kind_indef($U), c'est bien cela?";
confirm(energy=dontcare) : "Les calories n'importent pas, c'est bien cela?";
confirm(energy=$V) : "Vous cherchez un produit %energy_adj($V), c'est bien cela?";
#|Vous voulez un produit $V, c'est bien cela?|Vous cherchez un produit $V, est-ce bien cela?|Vous voulez un produit $V, est-ce bien cela?|Vous cherchez un produit $V, n'est ce pas?|Vous voulez un produit $V, n'est ce pas?";
confirm(fatness=dontcare) : "Le taux de gras n'importe pas, c'est bien cela?";
confirm(fatness=$V) : "Vous cherchez un produit %fatness_adj($V), c'est bien cela?";
#|Vous voulez un produit $V, c'est bien cela?|Vous cherchez un produit $V, est-ce bien cela?|Vous voulez un produit $V, est-ce bien cela?|Vous cherchez un produit $V, n'est ce pas?|Vous voulez un produit $V, n'est ce pas?";
confirm(sweetness=dontcare) : "Le taux de sucre n'importe pas, c'est bien cela?";
confirm(sweetness=$V) : "Vous cherchez un produit %sweetness_adj($V), c'est bien cela?";
#|Vous voulez un produit $V, c'est bien cela?|Vous cherchez un produit $V, est-ce bien cela?|Vous voulez un produit $V, est-ce bien cela?|Vous cherchez un produit $V, n'est ce pas?|Vous voulez un produit $V, n'est ce pas?";
confirm(saltiness=dontcare) : "Le taux de sel n'importe pas, c'est bien cela?";
confirm(saltiness=$V) : "Vous cherchez un produit %saltiness_adj($V), c'est bien cela?";
#|Vous voulez un produit $V, c'est bien cela?|Vous cherchez un produit $V, est-ce bien cela?|Vous voulez un produit $V, est-ce bien cela?|Vous cherchez un produit $V, n'est ce pas?|Vous voulez un produit $V, n'est ce pas?";
confirm(ishappymealonly=dontcare) : "Il importe peu que le produit soit uniquement disponible en Happy Meal, c'est bien cela?";
confirm(ishappymealonly=0) : "Vous voulez un produit disponible hors Happy Meal, c'est bien cela?";
confirm(ishappymealonly=1) : "Vous voulez un produit disponible uniquement en Happy Meal, c'est bien cela?";
confirm(ishappymealavailable=dontcare) : "Il importe peu que le produit soit disponible en Happy Meal, c'est bien cela?";
confirm(ishappymealavailable=0) : "Vous voulez un produit non disponible en Happy Meal, c'est bien cela?";
confirm(ishappymealavailable=1) : "Vous voulez un produit disponible en Happy Meal, c'est bien cela?";
confirm(hascheese=dontcare) : "Il importe peu que le produit comporte du fromage, c'est bien cela?";
confirm(hascheese=0) : "Vous voulez un produit sans fromage, c'est bien cela?";
confirm(hascheese=1) : "Vous voulez un produit avec fromage, c'est bien cela?";
confirm(hasbacon=dontcare) : "Il importe peu que le produit comporte du bacon, c'est bien cela?";
confirm(hasbacon=0) : "Vous voulez un produit sans bacon, c'est bien cela?";
confirm(hasbacon=1) : "Vous voulez un produit avec bacon, c'est bien cela?";

confirm(meat=dontcare) : "Le type de viande n'importe pas, c'est bien cela?";
confirm(meat=$V) : "Vous voulez un produit $V, c'est bien cela?";
confirm(pieces=dontcare) : "Le nombre de pièces de viande n'importe pas, c'est bien cela?";
confirm(pieces=0) : "Vous voulez un produit végétarien, c'est bien cela?";

confirm(kind=dontcare, energy=dontcare) : "Vous voulez un produit quelconque, sans préférence de calories. C'est bien cela?";
confirm(kind=$U, energy=dontcare) : "Vous voulez %kind_indef($U), sans préférence de calories. C'est bien cela?";
confirm(kind=dontcare, energy=$V) : "Vous voulez un produit quelconque, $V. C'est bien cela?";
confirm(kind=$U, energy=$V) : "Vous voulez %kind_indef($U), $V. C'est bien cela?";
confirm(kind=dontcare, fatness=dontcare) : "Vous voulez un produit quelconque, sans préférence sur le gras. C'est bien cela?";
confirm(kind=$U, fatness=dontcare) : "Vous voulez %kind_indef($U), sans préférence sur le gras. C'est bien cela?";
confirm(kind=dontcare, fatness=$V) : "Vous voulez un produit quelconque, $V. C'est bien cela?";
confirm(kind=$U, fatness=$V) : "Vous voulez %kind_indef($U), $V. C'est bien cela?";
confirm(kind=dontcare, sweetness=dontcare) : "Vous voulez un produit quelconque, sans préférence sur le sucre. C'est bien cela?";
confirm(kind=$U, sweetness=dontcare) : "Vous voulez %kind_indef($U), sans préférence sur le sucre. C'est bien cela?";
confirm(kind=dontcare, sweetness=$V) : "Vous voulez un produit quelconque, $V. C'est bien cela?";
confirm(kind=$U, sweetness=$V) : "Vous voulez %kind_indef($U), $V. C'est bien cela?";
confirm(kind=dontcare, saltiness=dontcare) : "Vous voulez un produit quelconque, sans préférence sur le sel. C'est bien cela?";
confirm(kind=$U, saltiness=dontcare) : "Vous voulez %kind_indef($U), sans préférence sur le sel. C'est bien cela?";
confirm(kind=dontcare, saltiness=$V) : "Vous voulez un produit quelconque, $V. C'est bien cela?";
confirm(kind=$U, saltiness=$V) : "Vous voulez %kind_indef($U), $V. C'est bien cela?";
confirm(kind=dontcare, meat=dontcare) : "Vous voulez un produit quelconque, sans préférence de viande. C'est bien cela?";
confirm(kind=$U, meat=dontcare) : "Vous voulez %kind_indef($U), sans préférence de viande. C'est bien cela?";
confirm(kind=dontcare, meat=$V) : "Vous voulez un produit quelconque, $V. C'est bien cela?";
confirm(kind=$U, meat=$V) : "Vous voulez %kind_indef($U), $V. C'est bien cela?";

confirm(kind=dontcare, ishappymealonly=dontcare) : "Vous voulez un produit quelconque, peu importe qu'il soit uniquement disponible en Happy Meal, c'est bien cela?";
confirm(kind=$U, ishappymealonly=dontcare) : "Vous voulez %kind_indef($U), peu importe peu que ça soit uniquement disponible en Happy Meal, c'est bien cela?";
confirm(kind=dontcare, ishappymealonly=0) : "Vous voulez un produit quelconque, disponible hors Happy Meal, c'est bien cela?";
confirm(kind=$U, ishappymealonly=0) : "Vous voulez %kind_indef($U) disponible hors Happy Meal, c'est bien cela?";
confirm(kind=dontcare, ishappymealonly=1) : "Vous voulez un produit quelconque, disponible uniquement en Happy Meal, c'est bien cela?";
confirm(kind=$U, ishappymealonly=1) : "Vous voulez %kind_indef($U) disponible uniquement en Happy Meal, c'est bien cela?";
confirm(kind=dontcare, ishappymealavailable=dontcare) : "Vous voulez un produit quelconque, peu qu'il soit disponible en Happy Meal, c'est bien cela?";
confirm(kind=$U, ishappymealavailable=dontcare) : "Vous voulez %kind_indef($U), peu importe sa disponiblilité en Happy Meal, c'est bien cela?";
confirm(kind=dontcare, ishappymealavailable=0) : "Vous voulez un produit quelconque, non disponible en Happy Meal, c'est bien cela?";
confirm(kind=$U, ishappymealavailable=0) : "Vous voulez %kind_indef($U) non disponible en Happy Meal, c'est bien cela?";
confirm(kind=dontcare, ishappymealavailable=1) : "Vous voulez un produit quelconque, disponible en Happy Meal, c'est bien cela?";
confirm(kind=$U, ishappymealavailable=1) : "Vous voulez %kind_indef($U) disponible en Happy Meal, c'est bien cela?";
confirm(kind=dontcare, hascheese=dontcare) : "Vous voulez un produit quelconque, peu importe qu'il contienne du fromage, c'est bien cela?";
confirm(kind=$U, hascheese=dontcare) : "Vous voulez %kind_indef($U), peu importe la présence de fromage, c'est bien cela?";
confirm(kind=dontcare, hascheese=0) : "Vous voulez un produit quelconque, sans fromage. C'est bien cela?";
confirm(kind=$U, hascheese=0) : "Vous voulez %kind_indef($U) sans fromage, c'est bien cela?";
confirm(kind=dontcare, hascheese=1) : "Vous voulez un produit quelconque, avec fromage. C'est bien cela?";
confirm(kind=$U, hascheese=1) : "Vous voulez %kind_indef($U) avec fromage, c'est bien cela?";
confirm(kind=dontcare, hasbacon=dontcare) : "Vous voulez un produit quelconque, peu importe qu'il contienne du bacon, c'est bien cela?";
confirm(kind=$U, hasbacon=dontcare) : "Vous voulez %kind_indef($U), peu importe la présence de bacon, c'est bien cela?";
confirm(kind=dontcare, hasbacon=0) : "Vous voulez un produit quelconque, sans bacon. C'est bien cela?";
confirm(kind=$U, hasbacon=0) : "Vous voulez %kind_indef($U) sans bacon, c'est bien cela?";
confirm(kind=dontcare, hasbacon=1) : "Vous voulez un produit quelconque, avec bacon. C'est bien cela?";
confirm(kind=$U, hasbacon=1) : "Vous voulez %kind_indef($U) avec bacon, c'est bien cela?";

confirm($A=$X) : "Let me confirm, you are looking for $X $A";

#Recomendation

inform(name=none,other=true,name=$X,kind=$U,$Y=$O) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O).";
inform(name=none,other=true,name=$X,kind=$U,$Y=$O,$Z=$P) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O) and %$Z_adj($P).";
inform(name=none,other=true,name=$X,kind=$U,$Y=$O,$Z=$P,$W=$R) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O), %$Z_adj($P) and %$W_adj($R).";
inform(name=none,other=true,name=$X,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R) and %$Q_adj($T).";
inform(name=none,other=true,name=$X,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T) and %$G_adj($H).";
inform(name=none,other=true,name=$X,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T), %$G_adj($H) and %$B_adj($D).";


inform(name=none,other=true,name=$X,name=$E,$Y=$O) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit %$Y_adj($O).";
inform(name=none,other=true,name=$X,name=$E,$Y=$O,$Z=$P) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit %$Y_adj($O) and %$Z_adj($P).";
inform(name=none,other=true,name=$X,name=$E,$Y=$O,$Z=$P,$W=$R) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit %$Y_adj($O), %$Z_adj($P) and %$W_adj($R).";
inform(name=none,other=true,name=$X,name=$E,$Y=$O,$Z=$P,$W=$R,$Q=$T) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R) and %$Q_adj($T).";
inform(name=none,other=true,name=$X,name=$E,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T) and %$G_adj($H).";
inform(name=none,other=true,name=$X,name=$E,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T), %$G_adj($H) and %$B_adj($D).";

inform(name=none,other=true,name=$X,name=$E,kind=$U,$Y=$O) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit %$Y_adj($O).";
inform(name=none,other=true,name=$X,name=$E,kind=$U,$Y=$O,$Z=$P) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit %$Y_adj($O) and %$Z_adj($P).";
inform(name=none,other=true,name=$X,name=$E,kind=$U,$Y=$O,$Z=$P,$W=$R) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit %$Y_adj($O), %$Z_adj($P) and %$W_adj($R).";
inform(name=none,other=true,name=$X,name=$E,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R) and %$Q_adj($T).";
inform(name=none,other=true,name=$X,name=$E,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit  %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T) and %$G_adj($H).";
inform(name=none,other=true,name=$X,name=$E,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D) : "%msg_str(sorry), %msg_str(cantfindother) que le $X et le $E qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T), %$G_adj($H) and %$B_adj($D).";

inform(name=none,other=true,name=$X,$Y=$O) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O).";
inform(name=none,other=true,name=$X,$Y=$O,$Z=$P) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O) et %$Z_adj($P).";
inform(name=none,other=true,name=$X,$Y=$O,$Z=$P,$W=$R) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O), %$Z_adj($P) et %$W_adj($R).";
inform(name=none,other=true,name=$X,$Y=$O,$Z=$P,$W=$R,$Q=$T) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R) et %$Q_adj($T).";
inform(name=none,other=true,name=$X,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T) et %$G_adj($H).";
inform(name=none,other=true,name=$X,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D) : "%msg_str(sorry), %msg_str(cantfindother) que le $X qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T), %$G_adj($H) et %$B_adj($D).";


inform(name=none,kind=$U) : "%msg_str(sorry), %msg_str(theresnone) qui soit %kind_indef($U).";
inform(name=none,kind=$U,$Y=$O) : "%msg_str(sorry), %msg_str(cantfind) %kind_indef($U) qui soit %$Y_adj($O).";
inform(name=none,kind=$U,$Y=$O,$Z=$P) : "%msg_str(sorry), %msg_str(cantfind) %kind_indef($U) qui soit %$Y_adj($O) et %$Z_adj($P).";
inform(name=none,kind=$U,$Y=$O,$Z=$P,$W=$R) : "%msg_str(sorry), %msg_str(cantfind) %kind_indef($U) qui soit %$Y_adj($O), %$Z_adj($P) et %$W_adj($R).";
inform(name=none,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T) : "%msg_str(sorry), %msg_str(cantfind) %kind_indef($U) qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R) et %$Q_adj($T).";
inform(name=none,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H) : "%msg_str(sorry), %msg_str(cantfind) %kind_indef($U) qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T) et %$G_adj($H).";
inform(name=none,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D) : "%msg_str(sorry), %msg_str(cantfind) %kind_indef($U) qui soit %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T), %$G_adj($H) et %$B_adj($D).";

inform(name=none,$Y=$O) : "%msg_str(sorry), %msg_str(theresnone) %$Y_adj($O).";
inform(name=none,$Y=$O,$Z=$P) : "%msg_str(sorry), %msg_str(theresnone) %$Y_adj($O) et %$Z_adj($P).";
inform(name=none,$Y=$O,$Z=$P,$W=$R) : "%msg_str(sorry), %msg_str(theresnone) %$Y_adj($O), %$Z_adj($P) et %$W_adj($R).";
inform(name=none,$Y=$O,$Z=$P,$W=$R,$Q=$T) : "%msg_str(sorry), %msg_str(theresnone) %$Y_adj($O), %$Z_adj($P), %$W_adj($R) et %$Q_adj($T).";
inform(name=none,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H) : "%msg_str(sorry), %msg_str(theresnone) %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T) et %$G_adj($H).";
inform(name=none,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D) : "%msg_str(sorry), %msg_str(theresnone) %$Y_adj($O), %$Z_adj($P), %$W_adj($R), %$Q_adj($T), %$G_adj($H) et %$B_adj($D).";

inform(name=$X,kind=dontcare) : "Le $X est sympa.";
inform(name=$X,kind=$U) : "Le $X est %kind_indef($U).";
inform(name=$X,kind=dontcare,$Y=$O) : "Le $X %$Y_inf($O).";
inform(name=$X,kind=$U,$Y=$O) : "Le $X est %kind_indef($U) et %$Y_inf($O).";
inform(name=$X,kind=dontcare,$Y=$O,$Z=$P) : "Le $X %$Y_inf($O) et %$Z_inf($P).";
inform(name=$X,kind=$U,$Y=$O,$Z=$P) : "Le $X est %kind_indef($U), %$Y_inf($O) et %$Z_inf($P).";
inform(name=$X,kind=dontcare,$Y=$O,$Z=$P,$W=$R) : "Le $X %$Y_inf($O), %$Z_inf($P) et %$W_inf($R).";
inform(name=$X,kind=$U,$Y=$O,$Z=$P,$W=$R) : "Le $X est %kind_indef($U), %$Y_inf($O), %$Z_inf($P) et %$W_inf($R).";
inform(name=$X,kind=dontcare,$Y=$O,$Z=$P,$W=$R,$Q=$T) : "Le $X %$Y_inf($O), %$Z_inf($P), %$W_inf($R) et %$Q_inf($T).";
inform(name=$X,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T) : "Le $X est %kind_indef($U), %$Y_inf($O), %$Z_inf($P), %$W_inf($R) et %$Q_inf($T).";
inform(name=$X,kind=dontcare,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H) : "Le $X %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T) et %$G_inf($H).";
inform(name=$X,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H) : "Le $X est %kind_indef($U), %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T) et %$G_inf($H).";
inform(name=$X,kind=dontcare,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D) : "Le $X %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T), %$G_inf($H) et %$B_inf($D).";
inform(name=$X,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D) : "Le $X est %kind_indef($U), %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T), %$G_inf($H) et %$B_inf($D).";
inform(name=$X,kind=dontcare,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D,$F=$C) : "Le $X %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T), %$G_inf($H) %$B_inf($D) et %$C_inf($F).";
inform(name=$X,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D,$F=$C) : "Le $X est %kind_indef($U), %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T), %$G_inf($H) %$B_inf($D) et %$C_inf($F).";
inform(name=$X,kind=dontcare,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D,$F=$C,$I=$J) : "Le $X %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T), %$G_inf($H) %$B_inf($D) %$C_inf($F) et %$I_inf($J).";
inform(name=$X,kind=$U,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D,$F=$C,$I=$J) : "Le $X est %kind_indef($U), %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T), %$G_inf($H) %$B_inf($D) %$C_inf($F) et %$I_inf($J).";
inform(name=$X,$Y=$O) : "Le $X %$Y_inf($O).";
inform(name=$X,$Y=$O,$Z=$P) : "Le $X %$Y_inf($O) et %$Z_inf($P).";
inform(name=$X,$Y=$O,$Z=$P,$W=$R) : "Le $X %$Y_inf($O), %$Z_inf($P) et %$W_inf($R).";
inform(name=$X,$Y=$O,$Z=$P,$W=$R,$Q=$T) : "Le $X %$Y_inf($O), %$Z_inf($P), %$W_inf($R) et %$Q_inf($T).";
inform(name=$X,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H) : "Le $X %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T) et %$G_inf($H).";
inform(name=$X,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D) : "Le $X %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T), %$G_inf($H) et %$B_inf($D).";
inform(name=$X,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D,$F=$C) : "Le $X %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T), %$G_inf($H) %$B_inf($D) et %$C_inf($F).";
inform(name=$X,$Y=$O,$Z=$P,$W=$R,$Q=$T,$G=$H,$B=$D,$F=$C,$I=$J) : "Le $X %$Y_inf($O), %$Z_inf($P), %$W_inf($R), %$Q_inf($T), %$G_inf($H) %$B_inf($D) %$C_inf($F) et %$I_inf($J).";

#Implicit confirmations

confreq(count=$X,$Y=$P,$Q) : "Il %count_rest($X) %$Y_adj($P). %q($Q) ?";

confreq(count=$X,$Y=$P, $Z=$R,$Q) : "Il %count_rest($X) %$Y_adj($P) et %$Z_adj($R). %q($Q)";
confreq(count=$X,$Y=$P, $Z=$R, $M=$T,$Q) : "Il %count_rest($X) %$Y_adj($P) %$Z_adj($R) et %$M_adj($T). %q($Q)";
confreq(count=$X,$Y=$P, $Z=$R, $M=$T, $L=$S, $Q) : "Il %count_rest($X) %$Y_adj($P) %$Z_adj($R) %$M_adj($T) et %$L_adj($S). %q($Q)";
confreq(count=$X,$Y=$P, $Z=$R, $M=$T, $L=$S, $O=$V, $Q) : "Il %count_rest($X) %$Y_adj($P) %$Z_adj($R) %$M_adj($T) %$L_adj($S) et %$O_adj($V). %q($Q)";

# Selections
select(kind=$X, kind=dontcare) : "Vos critères sont contradictoires. Voulez-vous %kind_indef($X) ou %msg_str(itdoesntmatter)?";
select(energy=$X, energy=dontcare) : "Vos critères sont contradictoires. Voulez-vous un produit %energy_adj($X) ou %msg_str(itdoesntmatter)?";
select(fatness=$X, fatness=dontcare) : "Vos critères sont contradictoires. Voulez-vous un produit %fatness_adj($X) ou %msg_str(itdoesntmatter)?";
select(sweetness=$X, sweetness=dontcare) : "Vos critères sont contradictoires. Voulez-vous un produit %sweetness_adj($X) ou %msg_str(itdoesntmatter)?";
select(saltiness=$X, saltiness=dontcare) : "Vos critères sont contradictoires. Voulez-vous un produit %saltiness_adj($X) ou %msg_str(itdoesntmatter)?";
select(meat=$X, meat=dontcare) : "Vos critères sont contradictoires. Voulez-vous un produit %meat_adj($X) ou %msg_str(itdoesntmatter)?";
select(hascheese=$X, hascheese=dontcare) : "Vos critères sont contradictoires. Voulez-vous un produit %hascheese_adj($X) ou %msg_str(itdoesntmatter)?";
select(hasbacon=$X, hasbacon=dontcare) : "Vos critères sont contradictoires. Voulez-vous un produit %hasbacon_adj($X) ou %msg_str(itdoesntmatter)?";
select(happymealavailable=$X, happymealavailable=dontcare) : "Vos critères sont contradictoires. Voulez-vous un produit %happymealavailable_adj($X) ou %msg_str(itdoesntmatter)?";
select(happymealonly=$X, happymealonly=dontcare) : "Vos critères sont contradictoires. Voulez-vous un produit %happymealonly_adj($X) ou %msg_str(itdoesntmatter)?";

select(name=$X,name=$Y) : "Que préférez-vous entre le $X et le $Y?";
select(kind=$X, kind=$Y) : "Préférez-vous un produit %kind_adj($X) ou %kind_adj($Y)?";
select(energy=$X, energy=$Y) : "Préférez-vous un produit %energy_adj($X) ou %energy_adj($Y)?";
select(fatness=$X, fatness=$Y) : "Préférez-vous un produit %fatness_adj($X) ou %fatness_adj($Y)?";
select(sweetness=$X, sweetness=$Y) : "Préférez-vous un produit %sweetness_adj($X) ou %sweetness_adj($Y)?";
select(saltiness=$X, saltiness=$Y) : "Préférez-vous un produit %saltiness_adj($X) ou %saltiness_adj($Y)?";
select(meat=$X, meat=$Y) : "Préférez-vous un produit %meat_adj($X) ou %meat_adj($Y)?";
select(pieces=$X, pieces=$Y) : "Préférez-vous un produit avec $X ou $Y morceaux/pièces de viande/steaks?";

select($X=$Y,$X=dontcare) : "Sorry would you like $Y for $X or you dont care";
select($X=$Y,$X=$Z) : "Sorry would you like $Y or $Z for $X";
